SELECT 	id_paciente AS "Prontuário"
	,nm_paciente AS "Nome paciente"
	,dt_nascimento AS "Nascimento"
	,tx_idade_atual AS "Idade atual"
	,nm_unidade_funcional AS  "Unidade funcional"
	,ts_internacao AS "Data internação"
	,ts_saida_paciente AS "Data saída"
	,ts_obito AS "Data óbito"
	,nm_prof_responsavel AS "Profissional responsável"
	,tx_recomendacao AS "Recomendação"
	,tx_tipo_logr AS "Tipo logradouro"
	,tx_endereco AS "Endereço"
	,nr_residencia AS "Nro residencial"
	,tx_complemento AS "Complemento"
	,nm_bairro AS "Bairro"
	,nm_cidade AS "Cidade"
	,cd_sigla_estado AS "UF"
	,nr_cep AS "CEP"
	,nr_fone_2 AS "Fone 1"
	,nr_fone_1 AS "Fone 2"
	,tx_plano_alta AS "Plano alta"
	,mu_res.nm_mun_unit AS "Unidade de residência"
	,tx_encaminhamentos_multi AS "Encaminhamentos multiprofissionais"
---- Produção
FROM dblink('dbname=dbaghu port=6544 host=10.90.12.40 user=ugen_integra password=jxNR#38',
'SELECT pac.prontuario, 
	pac.nome, 
	pac.dt_nascimento,
	to_char(age(pac.dt_nascimento), ''YYY"a" MM"m" DD"d" ''::text) AS idade_atual,
        COALESCE(unid_leito.descricao, unid_inter.descricao) 	AS nm_unidade_funcional,
	inter.dthr_internacao, 
	dt_saida_paciente,
	dt_obito,
	COALESCE(NULLIF(rapf.nome_usual,''''),rapf.nome)	AS nm_prof_responsavel,
--	mtv.desc_cid 						AS motivo_internacao,
--	diag.desc_cid 						AS diagnostico_principal,
	rec.descricao 						AS recomendacoes_alta,
	tl.abreviatura 						AS tipo_logr,
	CASE WHEN end_pac.bcl_clo_cep IS NOT NULL THEN logr_pac.nome 
	     ELSE end_pac.logradouro
	END 							AS endereco,
	end_pac.nro_logradouro 					AS numero_endereco,
	end_pac.compl_logradouro,
	CASE WHEN end_pac.bcl_clo_cep IS NOT NULL THEN bai_pac.descricao 
	     ELSE end_pac.bairro
	END 							AS descricao_bairro,
	CASE WHEN end_pac.bcl_clo_cep IS NOT NULL THEN cid_pac.nome 
	     ELSE 
		CASE WHEN end_pac.cdd_codigo IS NOT NULL THEN end_cid_pac.nome
		     ELSE end_pac.cidade
		END
	END 							AS cidade,
	cid_pac.uf_sigla,
	CASE WHEN end_pac.bcl_clo_cep IS NOT NULL THEN end_pac.bcl_clo_cep 
	     ELSE end_pac.cep
	END 							AS CEP,
	contatos1.telefone 					as telefone_residencial,
	contatos2.telefone 					as telefone_recado,

	pla.desc_plano_pos_alta || COALESCE('' - '' || pla.compl_plano_pos_alta,'''') AS tx_plano_alta,
	last_con.last_num 					AS id_ultima_consulta,
	tx_encaminhamentos_multi

	FROM agh.ain_internacoes inter
	INNER JOIN agh.agh_atendimentos atd ON inter.seq = atd.int_seq

	--LEFT  JOIN agh.mpm_alta_sumarios sma ON sma.apa_atd_seq = atd.seq AND sma.ind_situacao = ''A''
	LEFT  JOIN agh.mpm_alta_sumarios sma ON sma.apa_atd_seq = atd.seq AND sma.ind_situacao = ''A'' AND COALESCE(sma.ind_estorno,''N'') = ''N'' AND sma.ind_concluido = ''S''

--	LEFT  JOIN (select asu_apa_atd_seq, max(asu_seqp) last_asu_seqp FROM agh.mpm_alta_diag_mtvo_internacoes GROUP BY asu_apa_atd_seq) last_mtv ON last_mtv.asu_apa_atd_seq = atd.seq
--	LEFT  JOIN agh.mpm_alta_diag_mtvo_internacoes mtv ON mtv.asu_apa_atd_seq = last_mtv.asu_apa_atd_seq AND mtv.asu_seqp = last_mtv.last_asu_seqp

--	LEFT  JOIN (select asu_apa_atd_seq, max(asu_seqp) last_asu_seqp FROM agh.mpm_alta_diag_principais GROUP BY asu_apa_atd_seq) last_diag ON last_diag.asu_apa_atd_seq = atd.seq
--	LEFT  JOIN agh.mpm_alta_diag_principais diag on diag.asu_apa_atd_seq = last_diag.asu_apa_atd_seq AND diag.asu_seqp = last_diag.last_asu_seqp

	LEFT  JOIN (select asu_apa_atd_seq, max(asu_seqp) last_asu_seqp FROM agh.mpm_alta_recomendacoes GROUP BY asu_apa_atd_seq) last_rec ON last_rec.asu_apa_atd_seq = atd.seq
	LEFT  JOIN agh.mpm_alta_recomendacoes rec ON rec.asu_apa_atd_seq = last_rec.asu_apa_atd_seq AND rec.asu_seqp = last_rec.last_asu_seqp

	LEFT  JOIN (select asu_apa_atd_seq, max(asu_seqp) last_asu_seqp FROM agh.mpm_alta_planos GROUP BY asu_apa_atd_seq) last_pla ON last_pla.asu_apa_atd_seq = atd.seq
	LEFT  JOIN agh.mpm_alta_planos pla ON pla.asu_apa_atd_seq = atd.seq AND pla.asu_seqp = last_pla.last_asu_seqp

	-- busca a última consulta do paciente com data anterior à de internação (ou seja, considera a consulta que "gerou" a internação)
	LEFT  JOIN LATERAL (SELECT MAX(numero) last_num FROM agh.aac_consultas WHERE pac_codigo = inter.pac_codigo AND dt_consulta <= inter.dthr_internacao AND dt_consulta > inter.dthr_internacao - INTERVAL ''24 hours'') last_con ON TRUE
	LEFT  JOIN agh.aac_consultas con ON con.numero = last_con.last_num

	LEFT  JOIN agh.ain_leitos lei ON lei.lto_id = inter.lto_lto_id
	LEFT  JOIN agh.agh_unidades_funcionais unid_leito ON unid_leito.seq = lei.unf_seq
	LEFT  JOIN agh.agh_unidades_funcionais unid_inter ON unid_inter.seq = inter.unf_seq

	INNER JOIN agh.aip_pacientes pac ON inter.pac_codigo = pac.codigo
	LEFT  JOIN agh.rap_servidores raps ON raps.matricula = atd.ser_matricula AND raps.vin_codigo = atd.ser_vin_codigo
	LEFT  JOIN agh.rap_pessoas_fisicas rapf ON raps.pes_codigo = rapf.codigo

	LEFT JOIN (SELECT ep.pac_codigo, max(ep.seqp) maxseq FROM agh.aip_enderecos_pacientes ep GROUP BY ep.pac_codigo) recent_addr ON recent_addr.pac_codigo = pac.codigo 
	LEFT JOIN agh.aip_enderecos_pacientes end_pac ON pac.codigo = end_pac.pac_codigo AND recent_addr.maxseq = end_pac.seqp
	LEFT JOIN agh.aip_cidades end_cid_pac ON end_pac.cdd_codigo = end_cid_pac.codigo
	LEFT JOIN agh.aip_bairros bai_pac ON end_pac.bcl_bai_codigo = bai_pac.codigo
	LEFT JOIN agh.aip_logradouros logr_pac ON end_pac.bcl_clo_lgr_codigo = logr_pac.codigo
	LEFT JOIN agh.aip_cidades cid_pac ON logr_pac.cdd_codigo = cid_pac.codigo
	LEFT JOIN agh.aip_tipo_logradouros tl ON tl.codigo = logr_pac.tlg_codigo
	LEFT JOIN agh.aip_nacionalidades nac ON pac.nac_codigo = nac.codigo

	LEFT JOIN (select pac_codigo, ''('' || ddd || '')'' || nro_fone as telefone, row_number() OVER (PARTITION BY pac_codigo ORDER BY codigo) pos from agh.aip_contatos_pacientes) contatos1 on contatos1.pac_codigo = pac.codigo AND contatos1.pos = 1
	LEFT JOIN (select pac_codigo, ''('' || ddd || '')'' || nro_fone as telefone, row_number() OVER (PARTITION BY pac_codigo ORDER BY codigo) pos from agh.aip_contatos_pacientes) contatos2 on contatos2.pac_codigo = pac.codigo AND contatos2.pos = 2

	LEFT JOIN (SELECT atd_seq, STRING_AGG(texto, '' -'') tx_encaminhamentos_multi 
		FROM (
			SELECT 	last_ev.atd_seq, 
				last_ev.descricao || '': '' || 
				string_agg( REPLACE( SUBSTRING(last_ev_dados.descricao 	FROM 	NULLIF(POSITION(''#ENC'' IN  last_ev_dados.descricao),0)+6 FOR POSITION(''.''    IN  SUBSTRING(last_ev_dados.descricao FROM POSITION(''#ENC'' IN last_ev_dados.descricao)+5))), chr(13), '''') , '', '' ) AS texto
			  FROM 	(	SELECT r.codigo, r.descricao, a.atd_seq, MAX(e.seq) id_last_ev
					  FROM agh.mpm_anamneses a
					 INNER JOIN agh.mpm_evolucoes e ON e.ana_seq = a.seq
					 INNER JOIN agh.rap_tipos_qualificacao r ON a.tql_codigo = r.codigo
					 WHERE a.tql_codigo IN (5,16, 9, 14, 8, 6, 12, 3)
					   AND e.descricao LIKE ''%#ENC%''
					 GROUP BY r.codigo, r.descricao, a.atd_seq) last_ev --ON last_ev.atd_seq = atd.seq
			 INNER JOIN (	SELECT a.atd_seq, e.seq, e.descricao, e.ser_matricula, e.ser_vin_codigo
					  FROM agh.mpm_anamneses a
					 INNER JOIN agh.mpm_evolucoes e ON e.ana_seq = a.seq) last_ev_dados ON last_ev_dados.atd_seq = last_ev.atd_seq AND last_ev_dados.seq = last_ev.id_last_ev
			 GROUP BY last_ev.atd_seq, last_ev.descricao
			 ORDER BY last_ev.atd_seq, last_ev.descricao
		) AS temp
		GROUP BY atd_seq
	) AS tb_encaminhamentos ON tb_encaminhamentos.atd_seq = atd.seq

')
AS aghu(id_paciente INTEGER, nm_paciente CHARACTER VARYING(100), dt_nascimento DATE, tx_idade_atual CHARACTER VARYING(15), nm_unidade_funcional CHARACTER VARYING(60), ts_internacao TIMESTAMP WITHOUT TIME ZONE, 
	ts_saida_paciente TIMESTAMP WITHOUT TIME ZONE, ts_obito TIMESTAMP WITHOUT TIME ZONE, nm_prof_responsavel CHARACTER VARYING(100), tx_recomendacao CHARACTER VARYING(1000), tx_tipo_logr CHARACTER VARYING(12), 
	tx_endereco CHARACTER VARYING(120), nr_residencia INTEGER, tx_complemento CHARACTER VARYING(200), nm_bairro CHARACTER VARYING(100), nm_cidade CHARACTER VARYING(40), cd_sigla_estado CHARACTER VARYING(2), 
	nr_cep INTEGER, nr_fone_2 character varying(20), nr_fone_1 CHARACTER VARYING(20), tx_plano_alta TEXT, id_ultima_consulta INTEGER, tx_encaminhamentos_multi TEXT)
LEFT JOIN hu.man_patients pat ON pat.id_appointment = aghu.id_ultima_consulta
LEFT JOIN hu.man_municipal_units mu_res ON mu_res.id_mun_unit = pat.id_resident_munit
WHERE ts_saida_paciente::DATE > '#data_ini' AND ts_saida_paciente::DATE <= '#data_fim'
ORDER BY ts_saida_paciente
